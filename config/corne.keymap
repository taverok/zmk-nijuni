/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &trans    &mo 2
                              &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 3  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE        &kp AT_SIGN  &kp AMPERSAND    &kp UP_ARROW    &kp LEFT_BRACKET  &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp RIGHT_BRACKET  &kp UP_ARROW  &kp PIPE    &kp GRAVE  &kp BSPC
&kp LEFT_SHIFT    &kp HASH     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT         &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp LEFT           &kp DOWN      &kp RIGHT   &kp SQT    &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp DOLLAR   &kp EXCLAMATION  &kp COLON       &kp EQUAL         &kp LESS_THAN           &kp GREATER_THAN       &kp QUESTION       &kp COMMA     &kp PERIOD  &trans     &mo 2
                                                &kp LGUI        &mo 1             &kp TAB                 &kp RET                &mo 3              &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR        &bt BT_SEL 0  &trans  &trans    &trans  &trans       &kp C_VOLUME_UP    &trans      &kp UP_ARROW      &trans      &trans  &kp C_POWER
&kp LEFT_SHIFT    &bt BT_SEL 1  &trans  &trans    &trans  &trans       &kp C_MUTE         &kp LEFT    &kp DOWN_ARROW    &kp RIGHT   &trans  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &bt BT_SEL 2  &trans  &trans    &trans  &trans       &kp C_VOLUME_DOWN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &mo 2
                                        &kp LGUI  &mo 1   &kp SPACE    &kp RET            &mo 3       &kp RALT
            >;
        };

        num {
            bindings = <
&kp ESCAPE        &kp PERCENT  &kp F7  &kp F8            &kp F9  &kp F12    &kp MINUS  &kp N7        &kp N8         &kp NUMBER_9  &kp SLASH     &kp BACKSPACE
&kp LEFT_SHIFT    &kp POUND    &kp F4  &kp F5            &kp F6  &kp F11    &kt PLUS   &kp NUMBER_4  &kp N5         &kt NUMBER_6  &kp ASTERISK  &kp LCTRL
&kp LEFT_CONTROL  &kp DOLLAR   &kp F1  &kp F2            &kp F3  &kp F10    &kp N0     &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &trans        &mo 2
                                       &kp LEFT_COMMAND  &mo 1   &kp TAB    &kp ENTER  &mo 3         &kp RIGHT_ALT
            >;
        };
    };
};
